# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# IDE
.idea
.vscode

# Byte file/compiled/DLL
__pycache__
*.pyc
.swp

# Pipenv
Pipfile.lock
Pipfile

# pyenv
.python-version

# Testing
.pytest_cache
pytest.ini

# Environments
.env
env
venv

# lambda
lambda_zip
lambda-zip
layer.zip

# Build artifacts
reports
*.egg-info
docs/build
error_schema.log

#local stack setting
local
crash.log

# Custom
provider.tf
.terraform.lock.hcl
build
